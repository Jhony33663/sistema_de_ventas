/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package APP;

import static APP.Ingreso_productos.getConnection;
import com.mysql.jdbc.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Jhony
 */
public class Ingreso_vendedores extends javax.swing.JInternalFrame {

    DefaultTableModel modelo = new DefaultTableModel();
    Connection con = null;
    public static Connection conn;
    public static final String DRIVER = "com.mysql.jdbc.Driver";
    public static final String USERNAME = "root";
    public static final String PASSWORD = "";
    public static final String URL = "jdbc:mysql://localhost:3306/sistemaventas";
    PreparedStatement ps;
    ResultSet rs;

    public static Connection getConnection() {
        try {
            Class.forName(DRIVER);
            conn = (Connection) DriverManager.getConnection(URL, USERNAME, PASSWORD);
        } catch (Exception e) {
            System.out.println(e);
        }
        return conn;
    }

    /**
     * Creates new form Ingreso_vendedores
     */
    public Ingreso_vendedores() {
        initComponents();
        ocultar();
        mostrardatos();
        this.table.setModel(modelo);
        this.modelo.addColumn("id");
        this.modelo.addColumn("Nombres");
        this.modelo.addColumn("edad");
        this.modelo.addColumn("celular");
        this.modelo.addColumn("correo");
        this.modelo.addColumn("direccion");
        this.modelo.addColumn("fecha");
    }

//limpiar cajas
    public void limpiarcajas() {
        txt_cedula.setText(null);
        txt_nombres.setText(null);
        txt_edad.setText(null);
        jdt.setDate(null);
        txt_celular.setText(null);
        txt_correo.setText(null);
        txt_direccion.setText(null);
    }
//ocualtar

    public void ocultar() {
        lbl_v1.setVisible(false);
        lbl_v2.setVisible(false);
        lbl_v3.setVisible(false);
        lbl_v4.setVisible(false);
        lbl_v5.setVisible(false);
        lbl_v6.setVisible(false);

    }
//validacion email

    public boolean isEmail(String correo) {
        Pattern pat = null;
        Matcher mat = null;
        pat = Pattern.compile("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
                + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$");
        mat = pat.matcher(correo);
        if (mat.find()) {
            return true;
        } else {
            return false;
        }
    }
//validacion campos

    public void validaciones() {
        if (txt_cedula.getText().isEmpty()) {
            lbl_v1.setVisible(true);
        }
        if (txt_cedula.getText().length() > 0) {
            lbl_v1.setVisible(false);
        }
        if (txt_nombres.getText().isEmpty()) {
            lbl_v2.setVisible(true);
        }
        if (txt_nombres.getText().length() > 0) {
            lbl_v2.setVisible(false);
        }
        if (txt_edad.getText().isEmpty()) {
            lbl_v3.setVisible(true);
        }
        if (txt_edad.getText().length() > 0) {
            lbl_v3.setVisible(false);
        }
        if (txt_celular.getText().isEmpty()) {
            lbl_v4.setVisible(true);
        }
        if (txt_celular.getText().length() > 0) {
            lbl_v4.setVisible(false);
        }
        if (txt_correo.getText().isEmpty()) {
            lbl_v5.setVisible(true);
        }
        if (txt_correo.getText().length() > 0) {
            lbl_v5.setVisible(false);
        }
        if (txt_direccion.getText().isEmpty()) {
            lbl_v6.setVisible(true);
        }
        if (txt_direccion.getText().length() > 0) {
            lbl_v6.setVisible(false);
        }
    }

    //mostrarentabla
    public void mostrardatos() {
        try {
            conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/bdclinica", "root", "");
            String sql = "SELECT * FROM regpacientes";
            ps = conn.prepareStatement(sql);
            rs = ps.executeQuery();
            table.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton7 = new javax.swing.JButton();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        txt_cedula = new javax.swing.JTextField();
        txt_nombres = new javax.swing.JTextField();
        txt_edad = new javax.swing.JTextField();
        txt_celular = new javax.swing.JTextField();
        txt_correo = new javax.swing.JTextField();
        txt_direccion = new javax.swing.JTextField();
        jdt = new com.toedter.calendar.JDateChooser();
        lbl_v2 = new javax.swing.JLabel();
        lbl_v3 = new javax.swing.JLabel();
        lbl_v4 = new javax.swing.JLabel();
        lbl_v5 = new javax.swing.JLabel();
        lbl_v6 = new javax.swing.JLabel();
        lbl_v1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jButton7.setText("jButton7");

        setClosable(true);
        setIconifiable(true);
        setTitle("Vendedores");

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(table);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 320, 620, 130));
        jPanel1.add(txt_cedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 40, 150, -1));
        jPanel1.add(txt_nombres, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 120, 150, -1));
        jPanel1.add(txt_edad, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 190, 150, -1));
        jPanel1.add(txt_celular, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 260, 150, -1));

        txt_correo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_correoFocusLost(evt);
            }
        });
        jPanel1.add(txt_correo, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 40, 160, -1));
        jPanel1.add(txt_direccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 110, 160, -1));
        jPanel1.add(jdt, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 170, 160, -1));

        lbl_v2.setText("CAMPO REQUERIDO (*)");
        jPanel1.add(lbl_v2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 100, -1, -1));

        lbl_v3.setText("CAMPO REQUERIDO (*)");
        jPanel1.add(lbl_v3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 170, -1, -1));

        lbl_v4.setText("CAMPO REQUERIDO (*)");
        jPanel1.add(lbl_v4, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 240, -1, -1));

        lbl_v5.setText("CAMPO REQUERIDO (*)");
        jPanel1.add(lbl_v5, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 20, -1, -1));

        lbl_v6.setText("CAMPO REQUERIDO (*)");
        jPanel1.add(lbl_v6, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 90, -1, -1));

        lbl_v1.setText("CAMPO REQUERIDO (*)");
        jPanel1.add(lbl_v1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, -1, -1));

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Direccion");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 80, -1, -1));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Cedula");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, -1, -1));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nombres");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, -1, -1));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Edad");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 160, -1, -1));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Celular");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 220, -1, -1));

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Correo Electronico");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 10, -1, -1));

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Fecha de Nacimiento");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 150, -1, -1));

        jButton6.setText("ACTUALIZAR TABLA");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 150, -1));

        jButton5.setText("IMPRIMIR");
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 150, -1));

        jButton1.setText("GUARDAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 150, -1));

        jButton2.setText("BUSCAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 150, -1));

        jButton3.setText("MODIFICAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 150, -1));

        jButton4.setText("ELIMINAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 150, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Frame .png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 0, 890, 460));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (txt_cedula.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "DEBE LLENAR CEDULA PARA ELIMINAR", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            Connection conn = null;
            try {
                conn = getConnection();
                ps = conn.prepareStatement("DELETE FROM empleados WHERE cedula=?");
                ps.setInt(1, Integer.parseInt(txt_cedula.getText()));
                int res = ps.executeUpdate();
                if (res > 0) {
                    JOptionPane.showMessageDialog(null, "Datos eliminados");
                    limpiarcajas();
                } else {

                    JOptionPane.showMessageDialog(null, "Error al eliminar datos");
                    limpiarcajas();
                }
                conn.close();
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        validaciones();
        if (txt_cedula.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor verifique los campos obligatorios", "ERROR", JOptionPane.WARNING_MESSAGE);
        }
        if (txt_cedula.getText().length() == 10) {
            int c, suma = 0, acum, resta = 0;
            String lec;
            lec = txt_cedula.getText();
            String cedula = lec;
            for (int i = 0; i < cedula.length() - 1; i++) {
                c = Integer.parseInt(cedula.charAt(i) + "");
                if (i % 2 == 0) {
                    c = c * 2;
                    if (c > 9) {
                        c = c - 9;
                    }

                }
                suma = suma + c;
            }
            if (suma % 10 != 0) {
                acum = ((suma / 10) + 1) * 10;
                resta = acum - suma;
            }
            int ultimo = Integer.parseInt(cedula.charAt(9) + "");
            if (ultimo == resta) {

                JOptionPane.showMessageDialog(null, "CEDULA CORRECTA");
                if (txt_nombres.getText().isEmpty() || txt_cedula.getText().isEmpty() || txt_edad.getText().isEmpty() || txt_celular.getText().isEmpty() || txt_correo.getText().isEmpty()
                        || txt_direccion.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Por favor verifique los campos obligatorios", "ERROR", JOptionPane.WARNING_MESSAGE);
                } else {
                    Connection conn = null;
                    try {
                        //conexion a bd
                        conn = getConnection();
                        //datos y transformo a valores correspondientes
                        //consuta a la tabla
                        ps = conn.prepareStatement("INSERT INTO `empleados`(`cedula`, `Nombres`, `edad`, `celular`, `correo`, `direccion`,`fecha`)" + "VALUES(?,?,?,?,?,?,?)");
                        ps.setString(1, txt_cedula.getText());
                        ps.setString(2, txt_nombres.getText());
                        ps.setString(3, txt_edad.getText());
                        ps.setString(4, txt_celular.getText());
                        ps.setString(5, txt_correo.getText());
                        ps.setString(6, txt_direccion.getText());
                        ps.setString(7, ((JTextField) jdt.getDateEditor().getUiComponent()).getText());

                        //ejecute consulta y valores
                        //execute accion de incerscion 
                        //res envia msg
                        int res = ps.executeUpdate();
                        if (res > 0) {
                            JOptionPane.showMessageDialog(null, "Valores Almacenados");
                            limpiarcajas();
                        } else {
                            JOptionPane.showMessageDialog(null, "ERROR AL ALMACENAR LOS DATOS...");
                            limpiarcajas();
                        }
                        conn.close();
                    } catch (Exception e) {
                        System.out.println(e);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "CEDULA INCORRECTA");
            }
        } else {
            JOptionPane.showMessageDialog(null, "VERIFIQUE LOS DIGITOS DE LA CEDULA");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_correoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_correoFocusLost
        if (isEmail(txt_correo.getText())) {

        } else {
            JOptionPane.showMessageDialog(null, "Email incorrecto", "Validar email", JOptionPane.INFORMATION_MESSAGE);
            txt_correo.requestFocus();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txt_correoFocusLost

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        validaciones();
        Connection conn = null;
        try {
            conn = getConnection();
            ps = conn.prepareStatement("SELECT * FROM empleados WHERE cedula=?");
            ps.setString(1, txt_cedula.getText());
            rs = ps.executeQuery();
            if (rs.next()) {
                txt_cedula.setText(rs.getString("cedula"));
                txt_nombres.setText(rs.getString("Nombres"));
                txt_edad.setText(rs.getString("edad"));
                txt_celular.setText(rs.getString("celular"));
                txt_correo.setText(rs.getString("correo"));
                txt_direccion.setText(rs.getString("direccion"));
                String date = rs.getString("fecha");
                ((JTextField) jdt.getDateEditor().getUiComponent()).setText(date);
            } else {
                JOptionPane.showMessageDialog(null, "No existe la cedula");
                limpiarcajas();
            }

            conn.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        validaciones();
        if (txt_cedula.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor verifique los campos obligatorios", "ERROR", JOptionPane.WARNING_MESSAGE);
        }
        if (txt_cedula.getText().length() == 10) {
            int c, suma = 0, acum, resta = 0;
            String lec;
            lec = txt_cedula.getText();
            String cedula = lec;
            for (int i = 0; i < cedula.length() - 1; i++) {
                c = Integer.parseInt(cedula.charAt(i) + "");
                if (i % 2 == 0) {
                    c = c * 2;
                    if (c > 9) {
                        c = c - 9;
                    }

                }
                suma = suma + c;
            }
            if (suma % 10 != 0) {
                acum = ((suma / 10) + 1) * 10;
                resta = acum - suma;
            }
            int ultimo = Integer.parseInt(cedula.charAt(9) + "");
            if (ultimo == resta) {

                JOptionPane.showMessageDialog(null, "CEDULA CORRECTA");
                if (txt_nombres.getText().isEmpty() || txt_cedula.getText().isEmpty() || txt_edad.getText().isEmpty() || txt_celular.getText().isEmpty() || txt_correo.getText().isEmpty()
                        || txt_direccion.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Por favor verifique los campos obligatorios", "ERROR", JOptionPane.WARNING_MESSAGE);
                } else {
                    String date = ((JTextField) jdt.getDateEditor().getUiComponent()).getText();
                    Connection conn = null;
                    try {
                        //conexion a bd
                        conn = getConnection();
                        //datos y transformo a valores correspondientes
                        //consuta a la tabla
                        ps = conn.prepareStatement("UPDATE empleados SET Nombres=?, edad=?, celular=?, correo=?, direccion=?,fecha=? WHERE cedula=?");

                        ps.setString(1, txt_nombres.getText());
                        ps.setString(2, txt_edad.getText());
                        ps.setString(3, txt_celular.getText());
                        ps.setString(4, txt_correo.getText());
                        ps.setString(5, txt_direccion.getText());
                        ps.setString(6, ((JTextField) jdt.getDateEditor().getUiComponent()).getText());
                        ps.setString(7, txt_cedula.getText());
                        //ejecute consulta y valores
                        //execute accion de incerscion 
                        //res envia msg
                        int res = ps.executeUpdate();
                        if (res > 0) {
                            JOptionPane.showMessageDialog(null, "Valores Almacenados");
                            limpiarcajas();
                        } else {
                            JOptionPane.showMessageDialog(null, "ERROR AL ALMACENAR LOS DATOS...");
                            limpiarcajas();
                        }
                        conn.close();
                    } catch (Exception e) {
                        System.out.println(e);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "CEDULA INCORRECTA");
            }
        } else {
            JOptionPane.showMessageDialog(null, "VERIFIQUE LOS DIGITOS DE LA CEDULA");
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        mostrardatos();
    }//GEN-LAST:event_jButton6ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdt;
    private javax.swing.JLabel lbl_v1;
    private javax.swing.JLabel lbl_v2;
    private javax.swing.JLabel lbl_v3;
    private javax.swing.JLabel lbl_v4;
    private javax.swing.JLabel lbl_v5;
    private javax.swing.JLabel lbl_v6;
    private javax.swing.JTable table;
    private javax.swing.JTextField txt_cedula;
    private javax.swing.JTextField txt_celular;
    private javax.swing.JTextField txt_correo;
    private javax.swing.JTextField txt_direccion;
    private javax.swing.JTextField txt_edad;
    private javax.swing.JTextField txt_nombres;
    // End of variables declaration//GEN-END:variables
}
